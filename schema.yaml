openapi: 3.1.0
x-stoplight:
  id: dd4a2d0985b96
info:
  title: V1 Schema
  version: '1.0'
  summary: V1 Schema
  description: V1 Schema
  contact:
    name: Marten Klitzke
    url: 'https://fleetyards.net'
    email: info@fleetyards.net
  license:
    name: GNU General Public License v3.0
    url: 'https://github.com/fleetyards/fleetyards/blob/main/LICENSE'
tags:
  - name: Images
    description: Images
  - name: Models
    description: Models
  - name: Videos
    description: Videos
servers:
  - url: 'http://api.fleetyards.test/v1'
    description: development
  - url: 'https://stage.fleetyards.net/api/v1'
    description: stage
  - url: 'https://api.fleetyards.net/v1'
    description: live
paths:
  /models:
    get:
      summary: Models Index
      tags:
        - Models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/model-minimal.yaml
              examples: {}
      operationId: get-models
      description: List of Models
  '/models/{slug}':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
        description: Slug of Model
    get:
      summary: Model Detail
      tags:
        - Models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/model.yaml
      operationId: get-models-slug
      description: Model Detail
  '/models/{slug}/images':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
        description: Slug of Model
    get:
      summary: Model Images
      tags:
        - Models
        - Images
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/image.yaml
      operationId: get-models-slug-images
      description: Model Images
  '/models/{slug}/videos':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
        description: Slug of Model
    get:
      summary: Model Videos
      tags:
        - Models
        - Videos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/video.yaml
      operationId: get-models-slug-videos
      description: Model Videos
components:
  schemas: {}
